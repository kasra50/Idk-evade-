-- Simple GUI library
local GuiLibrary = {}

-- Button class
GuiLibrary.Button = {}
GuiLibrary.Button.__index = GuiLibrary.Button

-- Create a new button
function GuiLibrary.Button.new(parent, position, size, initialLabel)
    local self = setmetatable({}, GuiLibrary.Button)
    
    -- Verify parent exists
    if not parent then
        warn("Error: No parent provided for button")
        return nil
    end
    
    -- Create ScreenGui
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "ToggleButtonGui"
    self.ScreenGui.IgnoreGuiInset = true -- Account for Roblox top bar
    self.ScreenGui.Enabled = true
    self.ScreenGui.Parent = parent
    print("ScreenGui created and parented to", parent.Name)
    
    -- Create TextButton
    self.Button = Instance.new("TextButton")
    self.Button.Size = UDim2.new(0, size.X, 0, size.Y)
    self.Button.Position = UDim2.new(0, position.X, 0, position.Y)
    self.Button.Text = initialLabel
    self.Button.BackgroundColor3 = Color3.new(1, 1, 1) -- White background
    self.Button.TextColor3 = Color3.new(0, 0, 0) -- Black text
    self.Button.BorderColor3 = Color3.new(0, 0, 0) -- Black border
    self.Button.TextScaled = true -- Scale text to fit
    self.Button.Parent = self.ScreenGui
    print("Button created at position", position.X, position.Y)
    
    self.IsOpen = false -- Tracks open/close state
    self.Label = initialLabel
    
    -- Connect click event
    self.Button.MouseButton1Click:Connect(function()
        self:OnClick()
    end)
    
    return self
end

-- Handle button click
function GuiLibrary.Button:OnClick()
    self.IsOpen = not self.IsOpen -- Toggle state
    self.Label = self.IsOpen and "Close" or "Open" -- Update label
    self.Button.Text = self.Label -- Update button text
    print("Button clicked, new state:", self.Label)
end

-- Destroy the button
function GuiLibrary.Button:Destroy()
    if self.ScreenGui then
        self.ScreenGui:Destroy()
        print("Button destroyed")
    end
end

-- Example usage with delayed PlayerGui access
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for PlayerGui to be available
local playerGui
local attempts = 0
while not playerGui and attempts < 10 do
    playerGui = player:FindFirstChild("PlayerGui")
    if not playerGui then
        warn("PlayerGui not found, retrying...")
        wait(0.5)
        attempts = attempts + 1
    end
end

if playerGui then
    print("PlayerGui found, creating button")
    -- Create a centered button with size 100x50
    local button = GuiLibrary.Button.new(playerGui, Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2 - 50, workspace.CurrentCamera.ViewportSize.Y / 2 - 25), Vector2.new(100, 50), "Open")
    if not button then
        warn("Failed to create button")
    end
else
    warn("Error: Could not find PlayerGui after retries")
end

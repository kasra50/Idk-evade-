local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local function setupCharacter(character)
    local humanoid = character:WaitForChild("Humanoid")

    local enabled = true
    local canJump = true

    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "JumpToggleGUI"
    gui.ResetOnSpawn = false

    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(0, 150, 0, 50)
    frame.Position = UDim2.new(0, 20, 0, 20)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.Active = true

    local button = Instance.new("TextButton", frame)
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Text = "Disable"
    button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    button.TextColor3 = Color3.new(1, 1, 1)

    button.MouseButton1Click:Connect(function()
        enabled = not enabled
        button.Text = enabled and "Disable" or "Enable"
    end)

    local function handleJumping()
        if not enabled or not canJump then return end

        if humanoid.FloorMaterial ~= Enum.Material.Air then
            canJump = false
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            task.wait(0.5)
            canJump = true
        end
    end

    RunService.RenderStepped:Connect(function()
        if humanoid.Health > 0 then
            handleJumping()
        end
    end)

    humanoid.Died:Connect(function()
        enabled = false
        button.Text = "Enable"
    end)
end

player.CharacterAdded:Connect(function(character)
    setupCharacter(character)
end)

if player.Character then
    setupCharacter(player.Character)
end
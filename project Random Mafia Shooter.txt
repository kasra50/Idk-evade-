local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Lightingware" .. Fluent.Version,
    SubTitle = "by vuks1n",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent",
        Duration = 5
    })

    -- Deaths Section
    local DeathsSection = Tabs.Main:AddSection("Deaths")
    local DeathsInput = DeathsSection:AddInput("DeathsInput", {
        Title = "Deaths Amount",
        Default = "2000",
        Placeholder = "Enter deaths amount",
        Numeric = true,
        Finished = false
    })
    DeathsSection:AddButton({
        Title = "Set Deaths",
        Description = "Set player deaths to the specified amount",
        Callback = function()
            local amount = tonumber(DeathsInput.Value) or 2000
            local args = {
                amount,
                "Deaths"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Player"):WaitForChild("ChangeValue"):InvokeServer(unpack(args))
            Fluent:Notify({
                Title = "Success",
                Content = "Deaths set to " .. amount,
                Duration = 3
            })
        end
    })

    -- Kills Section
    local KillsSection = Tabs.Main:AddSection("Kills")
    local KillsInput = KillsSection:AddInput("KillsInput", {
        Title = "Kills Amount",
        Default = "2000",
        Placeholder = "Enter kills amount",
        Numeric = true,
        Finished = false
    })
    KillsSection:AddButton({
        Title = "Set Kills",
        Description = "Set player kills to the specified amount",
        Callback = function()
            local amount = tonumber(KillsInput.Value) or 2000
            local args = {
                amount,
                "Kills"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Player"):WaitForChild("ChangeValue"):InvokeServer(unpack(args))
            Fluent:Notify({
                Title = "Success",
                Content = "Kills set to " .. amount,
                Duration = 3
            })
        end
    })

    -- Cash Section
    local CashSection = Tabs.Main:AddSection("Cash")
    local CashInput = CashSection:AddInput("CashInput", {
        Title = "Cash Amount",
        Default = "2000",
        Placeholder = "Enter cash amount",
        Numeric = true,
        Finished = false
    })
    CashSection:AddButton({
        Title = "Set Cash",
        Description = "Set player cash to the specified amount",
        Callback = function()
            local amount = tonumber(CashInput.Value) or 2000
            local args = {
                amount,
                "Cash"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Player"):WaitForChild("ChangeValue"):InvokeServer(unpack(args))
            Fluent:Notify({
                Title = "Success",
                Content = "Cash set to " .. amount,
                Duration = 3
            })
        end
    })
end

-- Addons
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})

InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()